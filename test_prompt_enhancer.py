#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python test_prompt_enhancer.py "–¢–µ–∫—Å—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è"
    
–∏–ª–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:
    python test_prompt_enhancer.py
"""
import asyncio
import sys
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à —Å–µ—Ä–≤–∏—Å
from tg_bot.services.prompt_enhancer_service import enhance_audio_prompt


async def test_enhancement(text: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞."""
    print("=" * 80)
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Prompt Enhancer")
    print("=" * 80)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    api_key = os.getenv("OPENAI_API_KEY")
    if not api_key:
        print("‚ùå –û–®–ò–ë–ö–ê: OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print()
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("  export OPENAI_API_KEY='your-key-here'")
        print()
        print("–∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª .env:")
        print("  OPENAI_API_KEY=your-key-here")
        print()
        return
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: {api_key[:10]}...")
    print()
    
    print("üìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
    print(f"   {text}")
    print()
    
    print("‚è≥ –£–ª—É—á—à–∞—é –ø—Ä–æ–º–ø—Ç...")
    print()
    
    try:
        enhanced = await enhance_audio_prompt(text)
        
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print("=" * 80)
        print()
        print("üì• –ò–°–•–û–î–ù–´–ô –¢–ï–ö–°–¢:")
        print(f"   {text}")
        print()
        print("üì§ –£–õ–£–ß–®–ï–ù–ù–´–ô –¢–ï–ö–°–¢:")
        print(f"   {enhanced}")
        print()
        print("=" * 80)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        original_len = len(text)
        enhanced_len = len(enhanced)
        diff = enhanced_len - original_len
        
        print()
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –î–ª–∏–Ω–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ: {original_len} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –î–ª–∏–Ω–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ: {enhanced_len} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {diff:+d} —Å–∏–º–≤–æ–ª–æ–≤ ({diff/original_len*100:+.1f}%)")
        print()
        
        if text == enhanced:
            print("‚ö†Ô∏è  –¢–µ–∫—Å—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è (–≤–æ–∑–º–æ–∂–Ω–æ, –æ—à–∏–±–∫–∞ API –∏–ª–∏ —Ç–µ–∫—Å—Ç —É–∂–µ –æ–ø—Ç–∏–º–∞–ª–µ–Ω)")
        else:
            print("‚úÖ –¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


async def interactive_mode():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("=" * 80)
    print("üß™ Prompt Enhancer - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º")
    print("=" * 80)
    print()
    print("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è (–∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
    print()
    
    while True:
        try:
            text = input(">>> ").strip()
            
            if not text:
                continue
                
            if text.lower() in ['q', 'quit', 'exit']:
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            
            await test_enhancement(text)
            print()
            print("–í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç (–∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
            print()
            
        except KeyboardInterrupt:
            print()
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except EOFError:
            break


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if len(sys.argv) > 1:
        text = " ".join(sys.argv[1:])
        await test_enhancement(text)
    else:
        # –ò–Ω–∞—á–µ –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        await interactive_mode()


if __name__ == "__main__":
    asyncio.run(main())

