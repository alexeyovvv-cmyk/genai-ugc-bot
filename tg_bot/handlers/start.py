"""Start handlers for the Telegram bot.

This module contains handlers for:
- /start command
- FAQ
- User profile
"""

from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from tg_bot.utils.credits import get_credits
from tg_bot.utils.statistics import track_user_activity
from tg_bot.keyboards import main_menu, back_to_main_menu, bottom_navigation_menu
from tg_bot.utils.logger import setup_logger

logger = setup_logger(__name__)

# Import shared dispatcher
from tg_bot.dispatcher import dp


@dp.message(CommandStart)
async def cmd_start(m: Message):
    """Handle /start command"""
    logger.info(f"üî¥ START: –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {m.from_user.id}")
    logger.info(f"üî¥ START: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {m.from_user.first_name} {m.from_user.last_name} (@{m.from_user.username})")
    logger.info(f"üî¥ START: Chat ID: {m.chat.id}, Chat Type: {m.chat.type}")
    
    from tg_bot.utils.credits import ensure_user
    logger.info(f"üî¥ START: –í—ã–∑—ã–≤–∞–µ–º ensure_user –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {m.from_user.id}")
    ensure_user(m.from_user.id)
    logger.info(f"üî¥ START: ensure_user –∑–∞–≤–µ—Ä—à–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {m.from_user.id}")
    
    # track_user_activity(m.from_user.id)  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –û–¢–ö–õ–Æ–ß–ï–ù–û
    logger.info(f"üî¥ START: –ü–æ–ª—É—á–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {m.from_user.id}")
    current_credits = get_credits(m.from_user.id)
    logger.info(f"üî¥ START: –ö—Ä–µ–¥–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {m.from_user.id}: {current_credits}")
    
    logger.info(f"üî¥ START: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {m.from_user.id}")
    await m.answer(
        "üé¨ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å Datanauts.co</b>\n\n"
        "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –¥–µ—Å—è—Ç–∫–∏ UGC-like —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ä–æ–ª–∏–∫–æ–≤ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã —Å –ø–æ–º–æ—â—å—é –ò–ò.\n"
        f"–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å: <b>{current_credits} –∫—Ä–µ–¥–∏—Ç–æ–≤</b>. 1 —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ = 1 –∫—Ä–µ–¥–∏—Ç\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        parse_mode="HTML",
        reply_markup=main_menu()
    )
    logger.info(f"üî¥ START: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {m.from_user.id}")




@dp.message(F.text)
async def debug_all_messages(m: Message, state: FSMContext):
    """DEBUG: –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    current_state = await state.get_state()
    logger.info(f"üîµ DEBUG: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {m.from_user.id}: '{m.text}' –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏: {current_state}")
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ FSM —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if not current_state:
        logger.info(f"üîµ DEBUG: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {m.from_user.id} –Ω–µ –≤ FSM —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        from tg_bot.utils.credits import ensure_user, get_credits
        ensure_user(m.from_user.id)
        current_credits = get_credits(m.from_user.id)
        await m.answer(
            "üé¨ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å Datanauts.co</b>\n\n"
            "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –¥–µ—Å—è—Ç–∫–∏ UGC-like —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ä–æ–ª–∏–∫–æ–≤ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã —Å –ø–æ–º–æ—â—å—é –ò–ò.\n"
            f"–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å: <b>{current_credits} –∫—Ä–µ–¥–∏—Ç–æ–≤</b>. 1 —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ = 1 –∫—Ä–µ–¥–∏—Ç\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            parse_mode="HTML",
            reply_markup=main_menu()
        )


@dp.callback_query(F.data == "faq")
async def show_faq(c: CallbackQuery):
    """Show FAQ"""
    from tg_bot.utils.constants import COST_UGC_VIDEO, DEFAULT_CREDITS
    
    faq_text = f"""
‚ùì <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º</b>

1Ô∏è‚É£ <b>–°–æ–∑–¥–∞—Ç—å UGC —Ä–µ–∫–ª–∞–º—É</b>
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ –¥–µ—Å—è—Ç–∫–æ–≤ –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
   ‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –æ–∑–≤—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂
   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —Ä–æ–ª–∏–∫ –¥–ª—è –≤–∞—à–µ–π UGC-like –∫–∞–º–ø–∞–Ω–∏–∏ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã!

2Ô∏è‚É£ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å</b>
   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ: {COST_UGC_VIDEO} –∫—Ä–µ–¥–∏—Ç
   ‚Ä¢ –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: üòé welcome bonus {DEFAULT_CREDITS} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–∞

3Ô∏è‚É£ <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏</b>
   ‚Ä¢ –í–∏–¥–µ–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –ª—É—á—à–∏—Ö –ò–ò –º–æ–¥–µ–ª–µ–π
   ‚Ä¢ –§–æ—Ä–º–∞—Ç –≤–∏–¥–µ–æ: 9:16 (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ)
   ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ 15 —Å–µ–∫—É–Ω–¥

–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!
"""
    await c.message.answer(faq_text, parse_mode="HTML", reply_markup=back_to_main_menu())
    await c.answer()


@dp.callback_query(F.data == "profile")
async def show_profile(c: CallbackQuery):
    """Show user profile"""
    credits = get_credits(c.from_user.id)
    await c.message.edit_text(
        f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        f"üÜî ID: {c.from_user.id}\n"
        f"üë§ –ò–º—è: {c.from_user.first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        f"üí∞ –ö—Ä–µ–¥–∏—Ç—ã: {credits}\n"
        f"üìÖ –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω\n\n"
        f"üé¨ <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b>\n"
        f"‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: 0\n"
        f"‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: —Å–µ–π—á–∞—Å\n\n"
        f"üí° <b>–°–æ–≤–µ—Ç:</b> –†–µ–≥—É–ª—è—Ä–Ω–æ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!",
        parse_mode="HTML",
        reply_markup=bottom_navigation_menu()
    )
    await c.answer()
