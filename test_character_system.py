#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from tg_bot.utils.files import (
    list_character_images,
    get_character_image,
    get_available_genders,
    get_available_ages
)

def test_character_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª–æ–≤
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª–æ–≤:")
    genders = get_available_genders()
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—ã: {genders}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª–∞
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤:")
    for gender in genders:
        ages = get_available_ages(gender)
        print(f"   {gender}: {ages}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π:")
    for gender in genders:
        ages = get_available_ages(gender)
        for age in ages:
            print(f"\n   üìÅ {gender}/{age}:")
            images, has_next = list_character_images(gender, age, page=0, limit=5)
            print(f"      –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(images)}")
            print(f"      –ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {has_next}")
            
            for i, img_path in enumerate(images):
                print(f"      {i+1}. {os.path.basename(img_path)}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
    for gender in genders:
        ages = get_available_ages(gender)
        for age in ages:
            images, _ = list_character_images(gender, age, page=0, limit=1000)
            if images:
                # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                img = get_character_image(gender, age, 0)
                if img:
                    print(f"   ‚úÖ {gender}/{age}[0]: {os.path.basename(img)}")
                else:
                    print(f"   ‚ùå {gender}/{age}[0]: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                break
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_character_system()
