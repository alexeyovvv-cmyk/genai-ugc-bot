#!/usr/bin/env python3
"""
–°–±—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–æ–≤: –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.

–î–µ–π—Å—Ç–≤–∏—è:
 1) DELETE FROM credit_log
 2) UPDATE users SET credits = DEFAULT_CREDITS
 3) (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –∞—É–¥–∏—Ç–∞) –î–æ–±–∞–≤–∏—Ç—å –ø–æ –∑–∞–ø–∏—Å–∏ +DEFAULT_CREDITS —Å reason='reset_grant'
"""
import os
from dotenv import load_dotenv
from sqlalchemy import create_engine, select, text
from sqlalchemy.orm import sessionmaker

from tg_bot.models import User, CreditLog
from tg_bot.utils.constants import DEFAULT_CREDITS


def main():
    load_dotenv()
    database_url = os.getenv("DATABASE_URL")
    if not database_url:
        print("‚ö†Ô∏è  Using local SQLite database")
        database_url = "sqlite:///genai.db"

    print(f"üîß Connecting to database...")
    engine = create_engine(database_url, echo=False)
    Session = sessionmaker(bind=engine)

    with Session() as session:
        # 1) –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∫—Ä–µ–¥–∏—Ç–æ–≤
        print("üßπ Deleting all credit_log records...")
        session.execute(text("DELETE FROM credit_log"))

        # 2) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        print(f"üîÑ Setting users.credits = {DEFAULT_CREDITS}...")
        session.execute(text("UPDATE users SET credits = :c"), {"c": DEFAULT_CREDITS})

        # 3) –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ audit –∑–∞–ø–∏—Å–µ–π (–ø–æ –∂–µ–ª–∞–Ω–∏—é - –≤–∫–ª—é—á–µ–Ω–æ)
        print("üìù Writing reset_grant entries for all users...")
        users = session.execute(select(User)).scalars().all()
        for u in users:
            session.add(CreditLog(user_id=u.id, delta=+DEFAULT_CREDITS, reason="reset_grant"))

        session.commit()
        print("‚úÖ Done. All users set to DEFAULT_CREDITS and audit entries added.")


if __name__ == "__main__":
    main()


